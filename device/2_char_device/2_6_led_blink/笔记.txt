rk3566 有5个gpio控制器  官方称为bank		每个控制器下 控制32个引脚		32个引脚 被分为4组		     A    B    C     D							0-7 8-15 16-23 24-31		基地址PMU_GRF	0xFDC20000SYS_GRF 0xFDC60000PMU_GRF_GPIO3B_IOMUX_H   0x004C复用功能寄存器：基地址 + 偏移地址 = 0xFDC60000 + 0x004C = 0xFDC6004C0xFDC6004C 0-2位写0（gpio功能）     16-18 写1（写使能）  对寄存器进行操作时一定要先将值读出来 将此值或上我们要写得值   对gpio3_b4引脚初始化复用功能位gpio                  							0x00004440 | 0x70000读四个字节的数据root@linaro-alip:/# io -r -4 0xFDC6004Cfdc6004c:  00004440写四个字节的数据root@linaro-alip:/# io -w -4 0xFDC6004C  0x00074440gpio控制器基地址GPIO3 0xFE760000方向寄存器偏移地址GPIO_SWPORT_DDR_L  0x0008GPIO_SWPORT_DDR_H  0x000C		     A    B    C     D			0-7 8-15 16-23 24-31b0  b1  b2  b3  b4  b5  b6  b78   /9  /10 /11/12 /13 /14 /150xFE760000 + 0x0008 = 0xFE760008   12位写1（设置为输出）  28位写1（写使能） 0x00000000 |= 0x10001000读四个字节的数据root@linaro-alip:/# io -r -4 0xFE760008fe760008:  00000000写四个字节的数据root@linaro-alip:/# io -w -4 0xFE760008 0x10001000数据寄存器GPIO_SWPORT_DR_L 0x00000xFE760000 + 0x0000 = 0xFE760000 12位写1（设置输出高电平）  28位写1（写使能）  0x00000000 |= 0x10001000读四个字节的数据root@linaro-alip:/# io -r -4 0xFE760000fe760000:  00000000写四个字节的数据root@linaro-alip:/# io -w -4 0xFE760000 0x10001000寄存器地址 都是物理地址 驱动在内核层 运行在3-4g的虚拟内存中 是不可以直接操作物理地址的 我们要将物理地址映射到虚拟内存中 才可以进行操作void  * ioremap(unsigned long offset, unsigned long size)功能：将物理内存映射到虚拟内存中参数：		offset 偏移地址		size 大小  字节返回值：成返回虚拟地址		失败返回NULLvoid iounmap(void __iomem *addr);功能：注销映射参数：虚拟地址返回值：无0xFDC60000 + 0x0008 =0xFDC60008   gpio3_b4 要对12位写1（设置为输出）   28位写1 （写使能）  					0x00001000 |= 0x10001000root@linaro-alip:/# io -r -4 0xFDC60008fdc60008:  00001000数据寄存器：GPIO_SWPORT_DR_L 0x00000xFDC60000 + 0x0000 = 0xFDC60000 gpio3_b4 要对12位写1（设置输出高电平）   28位写1 （写使能）0x00001100  					 |= 0x100010001000 1100