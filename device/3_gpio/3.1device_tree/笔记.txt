1.什么是设备树描述硬件信息的树状数据结构， 加载后的本质是链表。在系统引导阶段，会对硬件进行初始化，这个时候，设备数的硬件信息会传递给操作系统。设备树存放在.dts和.dtsi中，通过DTC工具编译可以生成DTB二进制文件。设备树官网https://elinux.org/Device_Tree_Usage2.节点名的格式每个节点的名称都必须为 <name>[@<unit-address> ]name： 是一个简单的 ASCII 字符串，长度最多为 31 个字符。通常，节点是根据它所代表的设备类型来命名的。即。3com 以太网适配器的节点将使用名称 ethernet ，而不是 3com509 。unit-address：如果节点描述具有地址的设备，则包含 unit-address。通常，单元地址是用于访问设备的主地址，并列在节点的 reg 属性中。3.节点中的基本数据格式/dts-v1/; //设备树的版本/ {//根节点    node1 {//根节点的子节点        a-string-property = "A string";        a-string-list-property = "first string", "second string";        // hex is implied in byte arrays. no '0x' prefix is required        a-byte-data-property = [01 23 34 56];        child-node1 { //node1父节点的子节点            first-child-property; //空属性 起标识作用            second-child-property = <1>;            a-string-property = "Hello, world";        };        child-node2 {//node2父节点的子节点        };    };    node2 {        an-empty-property;        a-cell-property = <1 2 3 4>; /* each number (cell) is a uint32 */        child-node1 {        };    };};单个根节点：“ / ”几个子节点：“ node1 ”和“ node2 ”node1 的几个子项：“ child-node1 ”和“ child-node2 ”一堆属性散落在树上。属性是简单的键值对，其中值可以为空，也可以包含任意字节流。虽然数据类型未编码到数据结构中，但有一些基本数据表示形式可以在设备树源文件中表示。文本字符串（以 null 结尾）用双引号表示：string-property = "a string";用尖括号分隔的 32 位无符号整数：cell-property = <0xbeef 123 0xabcd1234>;单字节数据用方括号分隔：binary-property = [01 23 45 67];// hex is implied in byte arrays. no '0x' prefix is required可以使用逗号将不同表示的数据连接在一起：mixed-property = "a string", [0x01 0x23 0x45 0x67], <0x12345678>;逗号还用于创建字符串列表：string-list = "red fish", "blue fish";kernel 编译linux$ ./build.sh kernel下载到板子1.下载配置文件2.导入配置文件 到烧录工具3.选择boot.img文件4.勾选 强制写 并 点击执行验证进入/proc/device-tree/   查找我们的节点名